name: Release
on:
  push:
    tags:
      - "v*"
jobs:
  ci:
    # A branch is required, and cannot be dynamic - https://github.com/actions/runner/issues/1493
    uses: ./.github/workflows/ci.yml
  e2e: 
    uses: ./.github/workflows/e2e-tests.yml

  release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [ci, e2e]
    steps:
      - name: Retrieve tag name
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo TAG_NAME=$(echo ${{ github.ref_name }}) >> $GITHUB_ENV
      - name: Get release ID from the release created by release drafter
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            let releases = await github.rest.repos.listReleases({
               owner: context.repo.owner,
               repo: context.repo.repo,
            });
            for (const release of releases.data) {
              if (release.draft) {
                      core.info(release)
                      core.exportVariable('RELEASE_ID', release.id)
                      return
              }
            }
            core.setFailed(`Draft release not found`)
      - name: Publish release
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const {RELEASE_ID} = process.env
            const {TAG_NAME} = process.env
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: `${RELEASE_ID}`,
              draft: false,
              tag_name: `${TAG_NAME}`,
              name: `${TAG_NAME}`,
              prerelease: `${{ contains(github.ref_name, '-alpha') || contains(github.ref_name, '-beta') || contains(github.ref_name, '-rc') }}`
            });
  
  publish:
    name: Publish on npm
    runs-on: ubuntu-latest
    needs: [ci, e2e]
    permissions:
      contents: read
      id-token: write # Required for npm provenance
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      
      - name: Install dependencies
        uses: kubewarden/github-actions/policy-gh-action-dependencies@20e6274f09e9aee263969a8783488369cbdb1e1b # v4.5.5

      - name: Install javy
        run: |
          INSTALL_DIR=$HOME/.javy
          mkdir -p $INSTALL_DIR
          curl -L https://github.com/bytecodealliance/javy/releases/download/v5.0.4/javy-x86_64-linux-v5.0.4.gz -o javy.gz
          gunzip javy.gz && chmod +x javy && mv javy $INSTALL_DIR/
          echo $INSTALL_DIR >> $GITHUB_PATH

      - name: Build Javy plugin
        run: make build-plugin 

      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install npm dependencies in js directory
        run: |
          cd js
          npm ci
      
      - name: Build package
        run: |
          cd js
          npm run build
      
      - name: Publish to npm
        run: |
          cd js
          npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}